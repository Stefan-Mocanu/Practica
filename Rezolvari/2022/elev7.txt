Subiectul 1:
 1) C
 2) B
 3) A
 4) C
 5) B
Subiectul 2:
 1):
– a) 4
– b) 13, 21 [1]
– c) [2]
#include <i o s t r e a m >
using namespace s t d ;
int n , i = 2 , k = 0 ;
int main ( ) {
while ( n >= i ) {
i f ( n % i = 0 )
k++, n /= i ;
i f ( i == 2 )
i ++;
e l s e i += 2 ;
}
return 0 ;
}
1
– d) [3]
c i t e s t e n
i <=2; k<=0
==e x e c u t a
| ==c a t timp n%i e x e c u t a
| | k<=k=1
| | n<=n/ i
| ==|
| == daca i = 2 a t u n c i i <=i +1
==| c a t timp n < i
s c r i e k
 2) [4] 2021, 2022
 3) [5]
i d = s t r t o k ( s , ” ” ) ;
cout<<id<<” 2022 ” ;
Subiectul 3:
 1) [6]
int s e c v e n t a ( unsigned int n ) {
int c i f r e [ 1 0 ] , r e z = 0 , k = 0 ;
while ( n ) {
c i f r e [ k++] = n % 1 0 ;
n /= 1 0 ;
}
for ( int i = 0 ; i < k = 1 ; i ++)
i f ( c i f r e [ i ] == 2 && c i f r e [ i + 1 ] == 2 )
c i f r e [ i ] = 0 ;
for ( int i = k = 1 ; i >= 0 ; i ==)
r e z = r e z * 10 + c i f r e [ i ] ;
return r e z ;
}
2
 2)
#include <i o s t r e a m >
using namespace s t d ;
int m, n , a [ 1 0 0 ] [ 1 0 0 ] , r e z = 0 ;
int main ( ) {
c i n >> m >> n ;
for ( int i = 0 ; i < m; i ++)
for ( int j = 0 ; j < n ; j ++)
c i n >> a [ i ] [ j ] ;
for ( int i = 0 ; i < m; i ++)
for ( int j = 0 ; j < n ; j ++) {
int y = 1 1 , x = 1 1 ;
i f ( i > 0 ) y = a [ i = 1 ] [ j ] ;
i f ( i < m=1 && a [ i + 1 ] [ j ] < y ) y = a [ i + 1 ] [ j ] ;
i f ( j > 0 ) x = a [ i ] [ j = 1 ] ;
i f ( j < n=1 && a [ i ] [ j +1] < x ) x = a [ i ] [ j + 1 ] ;
i f ( y < x ) x = y ;
i f ( a [ i ] [ j ] < x )
r e z += ( x = a [ i ] [ j ] ) ;
}
cou t << r e z ;
return 0 ;
}
 3)
– a) [7] Algoritmul face ce spune cerint, a; este liniar, foloses, te mult
spat, iu suplimentar.
– b) [8]
#i n c l u d e <i o s t r e a m >
#include <f s t r e a m >
using namespace s t d ;
i f s t r e a m f ( ” bac . t x t ” ) ;
int x , y , v [ 1 0 0 0 0 0 0 ] , i = 0 , cont = 0 ;
int main ( )
{
f >> x >> y ;
while ( f >> v [ i ] ) {
i f ( v [ i ] >= x && v [ i ] <= y && v [ i ] != v [ i = 1 ] )
3
con t++;
i ++;
}
cou t << cont ;
return 0 ;
}